@page "/"
@using System.Runtime.InteropServices
@using System.IO
@using System.Diagnostics
@{
    var hostName = System.Net.Dns.GetHostName();
    var ipList = System.Net.Dns.GetHostAddressesAsync(hostName);
    System.Diagnostics.Debug.WriteLine(hostName);
    System.Diagnostics.Debug.WriteLine(ipList);

    const long Mebi = 1024 * 1024;
    const long Gibi = Mebi * 1024;

    GCMemoryInfo gcInfo = GC.GetGCMemoryInfo();
    string totalAvailableMemory = GetInBestUnit(gcInfo.TotalAvailableMemoryBytes);

    bool cgroup = RuntimeInformation.OSDescription.StartsWith("Linux") && Directory.Exists("/sys/fs/cgroup/memory");
    string memoryUsage = string.Empty;
    string memoryLimit = string.Empty;

    if (cgroup)
    {
        string usage = System.IO.File.ReadAllLines("/sys/fs/cgroup/memory/memory.usage_in_bytes")[0];
        string limit = System.IO.File.ReadAllLines("/sys/fs/cgroup/memory/memory.limit_in_bytes")[0];
        memoryUsage = GetInBestUnit(long.Parse(usage));
        memoryLimit = GetInBestUnit(long.Parse(limit));
    }

}

<div class="text-center">
    <h1>Hello! .NET on Power!</h1>
</div>
<br>

<font color="#0000cd"><b>今回の検証環境は、以下となります。</b></font><br>
<font color="#0000cd"><b>x86で作成されたサンプルコードをそのまま使用して、本日のセッション用にカスタマイズしています。</b></font><br>
<br>

<div align="center">
    <style>
	table td {
		background: #eee;
	}
    	table tr:nth-child(odd) td {
		background: #fff;
    	}
	table {
		border:3px solid #333;
	}
    </style>
    
    <table class="table table-striped table-hover">
        <tr>
            <td>.NET version</td>
            <td>@RuntimeInformation.FrameworkDescription</td>
        </tr>
        <tr>
            <td>Operating system</td>
            <td>@RuntimeInformation.OSDescription</td>
        </tr>
        <tr>
            <td>Processor architecture</td>
            <td>@RuntimeInformation.OSArchitecture</td>
        </tr>
        <tr>
            <td>CPU cores</td>
            <td>@Environment.ProcessorCount</td>
        </tr>
        <tr>
            <td>Containerized</td>
            <td>@(Environment.GetEnvironmentVariable("DOTNET_RUNNING_IN_CONTAINER") is null ? "false" : "true")</td>
        </tr>
        <tr>
            <td>Memory, total available GC memory</td>
            <td>@totalAvailableMemory</td>
        </tr>
        @if (cgroup)
        {
            <tr>
                <td>cgroup memory usage</td>
                <td>@memoryUsage</td>
            </tr>
            <tr>
                <td>cgroup memory limit</td>
                <td>@memoryLimit</td>
            </tr>
        }
        <tr>
            <td>Host name</td>
            <td>@hostName</td>
        </tr>
        <tr>
            <td style="vertical-align: top">Server IP address</td>
            <td>
		XXXX.XXXX.XXXX.XXXX
                @{
		    <br />
                    //foreach (var ip in ipList)
                    //{
                    //    @ip
                    //    <br />
                    //}
                }

            </td>
        </tr>
    </table>
</div>

@{
    string GetInBestUnit(long size)
    {
        if (size < Mebi)
        {
            return $"{size} bytes";
        }
        else if (size < Gibi)
        {
            decimal mebibytes = Decimal.Divide(size, Mebi);
            return $"{mebibytes:F} MiB";
        }
        else
        {
            decimal gibibytes = Decimal.Divide(size, Gibi);
            return $"{gibibytes:F} GiB";
        }
    }
}
